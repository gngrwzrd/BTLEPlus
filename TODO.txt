The take turn requirements are backwards. Make the peripheral have control by default.

Switch the serial service controll receiver to use BTLEPlusSerialServiceMessage.receiver. in order to easily
pass around a message object that is currently the receiver. i might be able to use currentMessage for both
send/receive since only one is happening at once..
Can take out messageType and messageId off of the packet receiver.

peerDroppedMessageFromReset??

Implement Cancel, Reset, Wait.
Reset should only be internal as a way to reset state upon errors and retry the current message from byte 0. Rename abort to Reset.
  use delegate method droppedMessageBecauseOfReset to notify user.
Cancel only cancels the current message transfer for both peers.
Wait is a response to new messages when the user requires a wait.

Make mtu/window size not changeable after init??

File resume logic is going to have to be done by the user as there has to be a request
for how many bytes the peer has, so the other peer can seek to the right position.



Add randmized packet loss simulation for resend testing.
fix resend from packet?
Add streaming BLEPlusSerialServiceStreamingMessage - provides and receives packets.
Write a tester app to automate a complete test of every feature.
